<x-app-layout>
    <!-- resources\views\dte\factura\create.blade.php -->
  <x-slot name="header">
    <h2 class="font-semibold text-xl text-gray-800 leading-tight">
      {{ __('Emitir Factura (DTE)') }}
    </h2>
  </x-slot>

  <div class="py-6">
    <div class="max-w-5xl mx-auto sm:px-6 lg:px-8">
      <div class="bg-white p-6 rounded-2xl shadow">

        {{-- Mensajes --}}
        @if(session('error'))
          <div class="mb-4 p-3 bg-red-50 text-red-700 rounded">{{ session('error') }}</div>
        @endif
        @if(session('success'))
          <div class="mb-4 p-3 bg-green-50 text-green-700 rounded">{{ session('success') }}</div>
        @endif

        <form 
    action="{{ $tipo && $tipo->codigo === '03' ? route('dte.ccf.store') : route('dte.store') }}" 
    method="POST" 
    id="dteForm"
>
          @csrf

          <input type="hidden" name="tipo" value="{{ $tipo->codigo ?? old('tipo', '01') }}">

          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            {{-- Cliente (DUI/NIT) --}}
            <div>
              <label class="block text-sm font-medium text-gray-700">Cliente (DUI / NIT)</label>
              <input type="text" name="cliente_numero" id="cliente_numero"
                     value="{{ old('cliente_numero') }}"
                     class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring"
                     placeholder="Ingrese DUI o NIT y presione Enter o salga del campo" />
              @error('cliente_numero')<p class="text-red-600 text-sm">{{ $message }}</p>@enderror
              <p id="cliente-status" class="text-xs text-gray-500 mt-1"></p>
            </div>

            {{-- Sucursal --}}
            <div>
              <label class="block text-sm font-medium text-gray-700">Sucursal</label>
              <select name="sucursal_id" id="sucursal_id" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring">
                <option value="">{{ __('(Ninguna)') }}</option>
                @foreach($sucursales as $s)
                  <option value="{{ $s->id }}" {{ old('sucursal_id') == $s->id ? 'selected' : '' }}>
                    {{ $s->descripcion }}
                  </option>
                @endforeach
              </select>
            </div>

            {{-- Caja --}}
            <div>
              <label class="block text-sm font-medium text-gray-700">Caja</label>
              <select name="caja_id" id="caja_id" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring">
                <option value="">{{ __('(Ninguna)') }}</option>
                @foreach($cajas as $c)
                  <option value="{{ $c->id }}" {{ old('caja_id') == $c->id ? 'selected' : '' }}>
                    {{ $c->descripcion }} ({{ $c->codigo_mh ?? '' }})
                  </option>
                @endforeach
              </select>
            </div>
          </div>

          {{-- VISIBLES (readonly) que se llenan al buscar cliente --}}
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
            <div>
              <label class="block text-sm font-medium text-gray-700">Nombre / Razón social</label>
              <input type="text" id="cliente_nombre_view" readonly
                     class="mt-1 block w-full border-gray-200 bg-gray-50 rounded-md shadow-sm" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Correo</label>
              <input type="email" id="cliente_correo_view" readonly
                     class="mt-1 block w-full border-gray-200 bg-gray-50 rounded-md shadow-sm" />
            </div>

            <div class="col-span-1 md:col-span-2">
              <label class="block text-sm font-medium text-gray-700">Dirección</label>
              <input type="text" id="cliente_direccion_view" readonly
                     class="mt-1 block w-full border-gray-200 bg-gray-50 rounded-md shadow-sm" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Teléfono</label>
              <input type="text" id="cliente_telefono_view" readonly
                     class="mt-1 block w-full border-gray-200 bg-gray-50 rounded-md shadow-sm" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Departamento / Municipio</label>
              <input type="text" id="cliente_depmun_view" readonly
                     class="mt-1 block w-full border-gray-200 bg-gray-50 rounded-md shadow-sm" />
            </div>
          </div>

          {{-- Hidden inputs que SI se enviarán al POST (estructura esperada por controller) --}}
          <input type="hidden" name="receptor[tipoDocumento]" id="receptor_tipoDocumento" value="{{ old('receptor.tipoDocumento') }}" />
          <input type="hidden" name="receptor[numDocumento]" id="receptor_numDocumento" value="{{ old('receptor.numDocumento', old('cliente_numero')) }}" />
          <input type="hidden" name="receptor[nrc]" id="receptor_nrc" value="{{ old('receptor.nrc') }}" />
          <input type="hidden" name="receptor[nombre]" id="receptor_nombre" value="{{ old('receptor.nombre') }}" />
          <input type="hidden" name="receptor[codActividad]" id="receptor_codActividad" value="{{ old('receptor.codActividad') }}" />
          <input type="hidden" name="receptor[descActividad]" id="receptor_descActividad" value="{{ old('receptor.descActividad') }}" />
          <input type="hidden" name="receptor[direccion][departamento]" id="receptor_direccion_departamento" value="{{ old('receptor.direccion.departamento') }}" />
          <input type="hidden" name="receptor[direccion][municipio]" id="receptor_direccion_municipio" value="{{ old('receptor.direccion.municipio') }}" />
          <input type="hidden" name="receptor[direccion][complemento]" id="receptor_direccion_complemento" value="{{ old('receptor.direccion.complemento') }}" />
          <input type="hidden" name="receptor[telefono]" id="receptor_telefono" value="{{ old('receptor.telefono') }}" />
          <input type="hidden" name="receptor[correo]" id="receptor_correo" value="{{ old('receptor.correo') }}" />

          {{-- IVA y totales visibles --}}
          <div class="mt-4 grid grid-cols-1 md:grid-cols-5 gap-4 items-end">
            <div>
              <label class="block text-sm font-medium text-gray-700">IVA (%)</label>
              <input type="number" step="0.01" name="iva" id="ivaPct" value="{{ old('iva', 13) }}"
                     class="mt-1 block w-32 border-gray-300 rounded-md shadow-sm focus:ring" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Subtotal (Base)</label>
              <input type="text" id="subtotal_view" readonly class="mt-1 block w-40 border-gray-200 bg-gray-50 rounded-md shadow-sm text-right" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">IVA monto</label>
              <input type="text" id="iva_monto_view" readonly class="mt-1 block w-40 border-gray-200 bg-gray-50 rounded-md shadow-sm text-right" />
            </div>

            <div>
                <label class="block text-sm font-medium text-gray-700">Descuento (-)</label>
                <input type="number" step="0.000001" name="descuento_general" id="descuentoGeneral" value="{{ old('descuento_general', 0) }}"
                        class="mt-1 block w-32 border-gray-300 rounded-md shadow-sm focus:ring" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Total</label>
              <input type="text" id="total_view" readonly class="mt-1 block w-40 border-gray-200 bg-gray-50 rounded-md shadow-sm text-right" />
            </div>
          </div>

          <hr class="my-4">

          {{-- Ítems: tabla dinámica --}}
          <div>
            <h3 class="font-semibold mb-2">Ítems</h3>
            <table class="w-full table-auto border-collapse">
              <thead>
                <tr>
                  <th class="border px-2 py-1 text-left">Código</th>
                  <th class="border px-2 py-1 text-left">Descripción</th>
                  <th class="border px-2 py-1 text-right">Cantidad</th>
                  <th class="border px-2 py-1 text-right">Precio (con IVA)</th>
                  <th class="border px-2 py-1 text-right">Descuento</th>
                  <th class="border px-2 py-1">Acción</th>
                </tr>
              </thead>
              <tbody id="items-body">
                {{-- Si hubo old inputs, reconstruimos --}}
                @if(old('items'))
                  @foreach(old('items') as $i => $it)
                    <tr>
                      <td class="border px-2 py-1">
                        <input name="items[{{ $i }}][codigo]" value="{{ $it['codigo'] ?? '' }}" class="w-full" />
                      </td>
                      <td class="border px-2 py-1">
                        <input name="items[{{ $i }}][descripcion]" value="{{ $it['descripcion'] ?? '' }}" class="w-full" />
                      </td>
                      <td class="border px-2 py-1 text-right">
                        <input name="items[{{ $i }}][cantidad]" value="{{ $it['cantidad'] ?? 1 }}" class="w-20 text-right cantidad-input" />
                      </td>
                      <td class="border px-2 py-1 text-right">
                        <input name="items[{{ $i }}][precio]" value="{{ $it['precio'] ?? '0.00' }}" class="w-28 text-right precio-input" step="0.000001"/>
                      </td>
                      <td class="border px-2 py-1 text-right">
                        <input name="items[{{ $i }}][descuento]" value="{{ $it['descuento'] ?? '0.00' }}" class="w-28 text-right descuento-input" step="0.000001"/>
                      </td>
                      <td class="border px-2 py-1 text-center">
                        <button type="button" class="remove-row px-2 py-1 text-red-600">Eliminar</button>
                      </td>
                    </tr>
                  @endforeach
                @else
                  <tr>
                    <td class="border px-2 py-1">
                      <input name="items[0][codigo]" class="w-full" />
                    </td>
                    <td class="border px-2 py-1">
                      <input name="items[0][descripcion]" class="w-full" />
                    </td>
                    <td class="border px-2 py-1 text-right">
                      <input name="items[0][cantidad]" value="1" class="w-20 text-right cantidad-input" />
                    </td>
                    <td class="border px-2 py-1 text-right">
                      <input name="items[0][precio]" value="0.00" class="w-28 text-right precio-input" step="0.000001"/>
                    </td>
                    <td class="border px-2 py-1 text-right">
                        <input name="items[0][descuento]" value="0.00" class="w-28 text-right descuento-input" step="0.000001"/>
                    </td>
                    <td class="border px-2 py-1 text-center">
                      <button type="button" class="remove-row px-2 py-1 text-red-600">Eliminar</button>
                    </td>
                  </tr>
                @endif
              </tbody>
            </table>

            <div class="mt-3 flex gap-2">
              <button id="add-item" type="button" class="px-4 py-2 bg-gray-200 rounded">Agregar Ítem</button>
            </div>
          </div>

          <hr class="my-6">

          {{-- Forma de Pago --}}
          <div>
            <h3 class="font-semibold mb-3">Forma de Pago</h3>
            <div id="payment-method-selector" class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
              {{-- Efectivo --}}
              <div data-payment-method="cash" class="p-4 bg-white rounded-2xl shadow border-2 border-transparent cursor-pointer hover:border-blue-500 transition flex items-center space-x-3">
                <span class="text-3xl">💵</span>
                <span class="text-lg font-medium text-gray-800">Efectivo</span>
              </div>
              {{-- Tarjeta --}}
              <div data-payment-method="card" class="p-4 bg-white rounded-2xl shadow border-2 border-transparent cursor-pointer hover:border-blue-500 transition flex items-center space-x-3">
                <span class="text-3xl">💳</span>
                <span class="text-lg font-medium text-gray-800">Tarjeta</span>
              </div>
              {{-- Otro --}}
              <div data-payment-method="other" class="p-4 bg-white rounded-2xl shadow border-2 border-transparent cursor-pointer hover:border-blue-500 transition flex items-center space-x-3">
                <span class="text-3xl">📄</span>
                <span class="text-lg font-medium text-gray-800">Otro</span>
              </div>
            </div>

            {{-- Contenedores para detalles de pago (ocultos por defecto) --}}
            <div id="payment-details" class="mt-4"></div>
          </div>

          {{-- Hidden inputs para el pago --}}
          <input type="hidden" name="pagos[0][codigo]" id="pago_codigo">
          <input type="hidden" name="pagos[0][montoPago]" id="pago_montoPago">
          <input type="hidden" name="pagos[0][referencia]" id="pago_referencia">

          <hr class="my-6">

          {{-- Forma de Pago --}}
           <div>
            <h3 class="font-semibold mb-3">Forma de Pago</h3>
            <div id="payment-method-selector" class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
              {{-- Efectivo --}}
              <div data-payment-method="cash" class="p-4 bg-white rounded-2xl shadow border-2 border-transparent cursor-pointer hover:border-blue-500 transition flex items-center space-x-3">
                <span class="text-3xl">💵</span>
                <span class="text-lg font-medium text-gray-800">Efectivo</span>
              </div>
              {{-- Tarjeta --}}
              <div data-payment-method="card" class="p-4 bg-white rounded-2xl shadow border-2 border-transparent cursor-pointer hover:border-blue-500 transition flex items-center space-x-3">
                <span class="text-3xl">💳</span>
                <span class="text-lg font-medium text-gray-800">Tarjeta</span>
              </div>
              {{-- Otro --}}
              <div data-payment-method="other" class="p-4 bg-white rounded-2xl shadow border-2 border-transparent cursor-pointer hover:border-blue-500 transition flex items-center space-x-3">
                <span class="text-3xl">📄</span>
                <span class="text-lg font-medium text-gray-800">Otro</span>
              </div>
            </div>

            {{-- Contenedores para detalles de pago (ocultos por defecto) --}}
            <div id="payment-details" class="mt-4"></div>
          </div>

          {{-- Hidden inputs para el pago --}}
          <input type="hidden" name="pagos[0][codigo]" id="pago_codigo">
          <input type="hidden" name="pagos[0][montoPago]" id="pago_montoPago">
          <input type="hidden" name="pagos[0][referencia]" id="pago_referencia">

          <div class="mt-6 flex justify-end">
            <button type="submit" class="px-6 py-2 bg-blue-600 text-white rounded-xl shadow hover:bg-blue-700">
              Generar DTE (preparar)
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  {{-- Modal para registrar cliente (opcional) --}}
  <div class="fixed z-10 inset-0 overflow-y-auto hidden" id="clienteModal" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
      <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
      <div class="inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:align-middle sm:max-w-lg sm:w-full">
        <div>
          <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">Registrar Cliente</h3>
          <div class="mt-2">
            <form id="clienteForm">
              @csrf
              <div class="grid grid-cols-1 gap-2">
                <input type="text" id="m_nit" name="nit" placeholder="NIT" class="border rounded p-2" />
                <input type="text" id="m_dui" name="dui" placeholder="DUI" class="border rounded p-2" />
                <input type="text" id="m_nombre" name="nombre" placeholder="Nombre *" required class="border rounded p-2" />
                <input type="email" id="m_correo" name="correo" placeholder="Correo" class="border rounded p-2" />
                {{-- CAMBIO: direccion -> complemento --}}
                <textarea id="m_complemento" name="complemento" placeholder="Complemento / Dirección" class="border rounded p-2"></textarea>
                <input type="text" id="m_telefono" name="telefono" placeholder="Teléfono" class="border rounded p-2" />
              </div>
              <div class="mt-3 flex justify-end">
                <button type="button" id="clienteCancel" class="px-3 py-1 bg-gray-200 rounded">Cancelar</button>
                <button type="submit" class="ml-2 px-3 py-1 bg-blue-600 text-white rounded">Guardar</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    window.formasPago = @json($formasPago ?? []);
  </script>
  @push('scripts')
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // ---------- helpers ----------
      const qs = (s, root=document) => root.querySelector(s);
      const qsa = (s, root=document) => Array.from(root.querySelectorAll(s));

      // ---------- Lógica de Items & Totales ----------
      const tbody  = qs('#items-body');
      
      function reindex() {
        qsa('#items-body tr').forEach((tr, idx) => {
          tr.querySelectorAll('input[name^="items["]').forEach((inp) => {
            const name = inp.getAttribute('name') || '';
            const newName = name.replace(/items\[\d+\]/, `items[${idx}]`);
            inp.setAttribute('name', newName);
          });
        });
        calcTotals();
      }

      qs('#add-item').addEventListener('click', () => {
        const idx = tbody.querySelectorAll('tr').length;
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td class="border px-2 py-1"><input name="items[${idx}][codigo]" class="w-full" /></td>
          <td class="border px-2 py-1"><input name="items[${idx}][descripcion]" class="w-full" /></td>
          <td class="border px-2 py-1 text-right"><input name="items[${idx}][cantidad]" value="1" class="w-20 text-right cantidad-input" type="number" step="0.01"/></td>
          <td class="border px-2 py-1 text-right"><input name="items[${idx}][precio]" value="0.00" class="w-28 text-right precio-input" type="number" step="0.000001"/></td>
          <td class="border px-2 py-1 text-right"><input name="items[${idx}][descuento]" value="0.00" class="w-28 text-right descuento-input" type="number" step="0.000001"/></td>
          <td class="border px-2 py-1 text-center"><button type="button" class="remove-row px-2 py-1 text-red-600">Eliminar</button></td>
        `;
        tbody.appendChild(tr);
        reindex();
      });

      tbody.addEventListener('click', (e) => {
        if (e.target.matches('.remove-row')) {
          e.target.closest('tr').remove();
          reindex();
        }
      });

      function elementValues() {
        return qsa('#items-body tr').map(tr => ({
          qty: parseFloat(tr.querySelector('.cantidad-input')?.value || 0),
          price: parseFloat(tr.querySelector('.precio-input')?.value || 0),
          discount: parseFloat(tr.querySelector('.descuento-input')?.value || 0)
        }));
      }

      function calcTotals() {
        const ivaPct = parseFloat(qs('#ivaPct').value || 0);
        const descGeneral = parseFloat(qs('#descuentoGeneral')?.value || 0);
        let subtotalFinal = 0, ivaMontoFinal = 0, totalVentaSinDescuentos = 0;

        const vals = elementValues();
        vals.forEach(v => { totalVentaSinDescuentos += v.price * v.qty; });

        vals.forEach(v => {
            const itemTotalSinDescuento = v.price * v.qty;
            let descGeneralProporcional = totalVentaSinDescuentos > 0 ? (itemTotalSinDescuento / totalVentaSinDescuentos) * descGeneral : 0;
            const montoDescuFinalItem = v.discount + descGeneralProporcional;
            const lineaTotalConIva = itemTotalSinDescuento - montoDescuFinalItem;
            const lineaBase = ivaPct > 0 ? lineaTotalConIva / (1 + ivaPct/100) : lineaTotalConIva;
            subtotalFinal += lineaBase;
            ivaMontoFinal += (lineaTotalConIva - lineaBase);
        });

        const totalFinal = subtotalFinal + ivaMontoFinal;
        qs('#subtotal_view').value = subtotalFinal.toFixed(2);
        qs('#iva_monto_view').value = ivaMontoFinal.toFixed(2);
        qs('#total_view').value = totalFinal.toFixed(2);
        
        const totalEvent = new CustomEvent('totalUpdated', { detail: { total: totalFinal.toFixed(2) } });
        document.dispatchEvent(totalEvent);
      }

      qs('#dteForm').addEventListener('input', (e) => {
        if (e.target.matches('.cantidad-input, .precio-input, .descuento-input, #ivaPct, #descuentoGeneral')) {
          calcTotals();
        }
      });

      // ---------- Lógica para Forma de Pago ----------
      const paymentSelector = qs('#payment-method-selector');
      const paymentDetailsContainer = qs('#payment-details');
      const pagoCodigoInput = qs('#pago_codigo');
      const pagoMontoInput = qs('#pago_montoPago');
      const pagoReferenciaInput = qs('#pago_referencia');

      const paymentTemplates = {
        cash: `
          <div class="p-4 bg-gray-50 rounded-lg">
            <label class="block text-sm font-medium text-gray-700">Monto Recibido</label>
            <input type="number" id="monto_recibido" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring" placeholder="0.00" step="0.01">
            <p class="mt-2 text-sm text-gray-600">Cambio: <span id="cambio_view" class="font-medium">$0.00</span></p>
          </div>
        `,
        card: `
          <div class="p-4 bg-gray-50 rounded-lg">
            <label class="block text-sm font-medium text-gray-700 mb-2">Tipo de Tarjeta</label>
            <div class="flex space-x-4">
              <button type="button" data-card-type="02" class="payment-card-type-btn px-4 py-2 bg-white border rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500">Débito</button>
              <button type="button" data-card-type="03" class="payment-card-type-btn px-4 py-2 bg-white border rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500">Crédito</button>
            </div>
            <label class="block text-sm font-medium text-gray-700 mt-4">Referencia (opcional)</label>
            <input type="text" id="card_referencia" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring" placeholder="Ej: últimos 4 dígitos, ID de transacción">
          </div>
        `,
        other: `
          <div class="p-4 bg-gray-50 rounded-lg">
            <label class="block text-sm font-medium text-gray-700">Seleccione una opción</label>
            <select id="other_payment_method" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring">
              <option value="">-- Seleccione --</option>
            </select>
            <label class="block text-sm font-medium text-gray-700 mt-4">Referencia (requerido si es 'Otros')</label>
            <input type="text" id="other_referencia" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring">
          </div>
        `
      };

      function updatePaymentDetails(method) {
        paymentDetailsContainer.innerHTML = paymentTemplates[method] || '';
        if (method === 'other') {
          const select = qs('#other_payment_method');
          if (window.formasPago) {
            const otherMethods = window.formasPago.filter(fp => !['01', '02', '03'].includes(fp.codigo));
            otherMethods.forEach(fp => {
              const option = document.createElement('option');
              option.value = fp.codigo;
              option.textContent = fp.descripcion;
              select.appendChild(option);
            });
          }
        }
      }

      paymentSelector.addEventListener('click', (e) => {
        const target = e.target.closest('[data-payment-method]');
        if (!target) return;
        const method = target.dataset.paymentMethod;

        qsa('[data-payment-method]').forEach(el => el.classList.remove('border-blue-500', 'bg-blue-50'));
        target.classList.add('border-blue-500', 'bg-blue-50');
        
        updatePaymentDetails(method);
        pagoCodigoInput.value = method === 'cash' ? '01' : '';
        pagoReferenciaInput.value = '';
      });

      paymentDetailsContainer.addEventListener('input', (e) => {
        if (e.target.matches('#monto_recibido')) {
          const montoRecibido = parseFloat(e.target.value) || 0;
          const total = parseFloat(qs('#total_view').value) || 0;
          qs('#cambio_view').textContent = `${(montoRecibido - total).toFixed(2)}`;
        }
        if (e.target.matches('#card_referencia, #other_referencia')) {
          pagoReferenciaInput.value = e.target.value;
        }
      });
      
      paymentDetailsContainer.addEventListener('change', (e) => {
        if (e.target.matches('#other_payment_method')) {
          pagoCodigoInput.value = e.target.value;
        }
      });

      paymentDetailsContainer.addEventListener('click', (e) => {
        if (e.target.matches('.payment-card-type-btn')) {
          const cardType = e.target.dataset.cardType;
          pagoCodigoInput.value = cardType;
          qsa('.payment-card-type-btn').forEach(btn => btn.classList.remove('bg-blue-200', 'border-blue-400'));
          e.target.classList.add('bg-blue-200', 'border-blue-400');
        }
      });

      document.addEventListener('totalUpdated', (e) => {
        pagoMontoInput.value = e.detail.total;
      });

      // ---------- Autocompletar cliente ----------
      const inputDoc = qs('#cliente_numero');
      const statusEl = qs('#cliente-status');
      const vNombre = qs('#cliente_nombre_view');
      const vCorreo = qs('#cliente_correo_view');
      const vDireccion = qs('#cliente_direccion_view');
      const vTelefono = qs('#cliente_telefono_view');
      const vDepMun = qs('#cliente_depmun_view');
      const hTipo = qs('#receptor_tipoDocumento');
      const hNum  = qs('#receptor_numDocumento');
      const hNrc  = qs('#receptor_nrc');
      const hNombre = qs('#receptor_nombre');
      const hCodAct = qs('#receptor_codActividad');
      const hDescAct = qs('#receptor_descActividad');
      const hDep = qs('#receptor_direccion_departamento');
      const hMun = qs('#receptor_direccion_municipio');
      const hComp = qs('#receptor_direccion_complemento');
      const hTel = qs('#receptor_telefono');
      const hCorreo = qs('#receptor_correo');
      const buscarBase = "{{ route('clientes.buscar', ['doc' => 'DOC_PLACEHOLDER']) }}";

      async function buscarYCompletar(doc) {
        if (!doc || doc.length < 3) return;
        statusEl.textContent = 'Buscando cliente...';
        try {
          const res = await fetch(buscarBase.replace('DOC_PLACEHOLDER', encodeURIComponent(doc)), {
            headers: { 'Accept': 'application/json' },
            credentials: 'same-origin'
          });
          if (res.status === 200) {
            const json = await res.json();
            if (json.found && json.cliente) {
              const d = json.cliente;
              vNombre.value = d.nombre ?? '';
              vCorreo.value = d.correo ?? '';
              vDireccion.value = (d.complemento ?? d.direccion ?? '');
              vTelefono.value = d.telefono ?? '';
              vDepMun.value = ((d.departamento ?? '') + ' / ' + (d.municipio ?? '')).trim();
              hNum.value = d.nit ?? d.dui ?? doc;
              hTipo.value = d.nit ? '02' : (d.dui ? '13' : '13');
              hNrc.value = d.nrc ?? '';
              hNombre.value = d.nombre ?? '';
              hCodAct.value = d.cod_actividad ?? '';
              hDescAct.value = d.desc_actividad ?? '';
              hDep.value = d.departamento ?? '';
              hMun.value = d.municipio ?? '';
              hComp.value = (d.complemento ?? d.direccion ?? '');
              hTel.value = d.telefono ?? '';
              hCorreo.value = d.correo ?? '';
              statusEl.textContent = 'Cliente encontrado.';
            } else {
              clearCliente();
              statusEl.textContent = 'Cliente no encontrado. Puede registrarlo.';
              openClienteModalWithNumber(doc);
            }
          } else {
            clearCliente();
            statusEl.textContent = 'Cliente no encontrado. Puede registrarlo.';
            openClienteModalWithNumber(doc);
          }
        } catch (e) {
          console.error(e);
          statusEl.textContent = 'Error de conexión.';
        }
      }

      function clearCliente() { /* ... */ }
      function openClienteModalWithNumber(doc) { /* ... */ }

      inputDoc.addEventListener('blur', () => buscarYCompletar(inputDoc.value.trim()));
      inputDoc.addEventListener('keydown', (e) => { if (e.key === 'Enter') { e.preventDefault(); buscarYCompletar(inputDoc.value.trim()); } });

      // ... (código del modal de cliente)

      calcTotals(); // Cómputo inicial
    });
  </script>
  @endpush

</x-app-layout>
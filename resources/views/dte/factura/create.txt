<x-app-layout>
    <!-- resources\views\dte\factura\create.blade.php -->
  <x-slot name="header">
    <h2 class="font-semibold text-xl text-gray-800 leading-tight">
      {{ __('Emitir Factura (DTE)') }}
    </h2>
  </x-slot>

  <div class="py-6">
    <div class="max-w-5xl mx-auto sm:px-6 lg:px-8">
      <div class="bg-white p-6 rounded-2xl shadow">

        {{-- Mensajes --}}
        @if(session('error'))
          <div class="mb-4 p-3 bg-red-50 text-red-700 rounded">{{ session('error') }}</div>
        @endif
        @if(session('success'))
          <div class="mb-4 p-3 bg-green-50 text-green-700 rounded">{{ session('success') }}</div>
        @endif

        <form
  action="{{ $tipo && $tipo->codigo === '03' ? route('dte.ccf.preparar') : route('dte.preparar') }}"
  method="POST"
  id="dteForm">

          @csrf

          <input type="hidden" name="tipo" value="{{ $tipo->codigo ?? old('tipo', '01') }}">

          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            {{-- Cliente (DUI/NIT) --}}
            <div>
              <label class="block text-sm font-medium text-gray-700">Cliente (DUI / NIT)</label>
              <input type="text" name="cliente_numero" id="cliente_numero"
                     value="{{ old('cliente_numero') }}"
                     class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring"
                     placeholder="Ingrese DUI o NIT y presione Enter o salga del campo" />
              @error('cliente_numero')<p class="text-red-600 text-sm">{{ $message }}</p>@enderror
              <p id="cliente-status" class="text-xs text-gray-500 mt-1"></p>
            </div>

            {{-- Sucursal --}}
            <div>
              <label class="block text-sm font-medium text-gray-700">Sucursal</label>
              <select name="sucursal_id" id="sucursal_id" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring">
                <option value="">{{ __('(Ninguna)') }}</option>
                @foreach($sucursales as $s)
                  <option value="{{ $s->id }}" {{ old('sucursal_id') == $s->id ? 'selected' : '' }}>
                    {{ $s->descripcion }}
                  </option>
                @endforeach
              </select>
            </div>

            {{-- Caja --}}
            <div>
              <label class="block text-sm font-medium text-gray-700">Caja</label>
              <select name="caja_id" id="caja_id" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring">
                <option value="">{{ __('(Ninguna)') }}</option>
                @foreach($cajas as $c)
                  <option value="{{ $c->id }}" {{ old('caja_id') == $c->id ? 'selected' : '' }}>
                    {{ $c->descripcion }} ({{ $c->codigo_mh ?? '' }})
                  </option>
                @endforeach
              </select>
            </div>
          </div>

          {{-- VISIBLES (readonly) que se llenan al buscar cliente --}}
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
            <div>
              <label class="block text-sm font-medium text-gray-700">Nombre / Razón social</label>
              <input type="text" id="cliente_nombre_view" readonly
                     class="mt-1 block w-full border-gray-200 bg-gray-50 rounded-md shadow-sm" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Correo</label>
              <input type="email" id="cliente_correo_view" readonly
                     class="mt-1 block w-full border-gray-200 bg-gray-50 rounded-md shadow-sm" />
            </div>

            <div class="col-span-1 md:col-span-2">
              <label class="block text-sm font-medium text-gray-700">Dirección</label>
              <input type="text" id="cliente_direccion_view" readonly
                     class="mt-1 block w-full border-gray-200 bg-gray-50 rounded-md shadow-sm" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Teléfono</label>
              <input type="text" id="cliente_telefono_view" readonly
                     class="mt-1 block w-full border-gray-200 bg-gray-50 rounded-md shadow-sm" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Departamento / Municipio</label>
              <input type="text" id="cliente_depmun_view" readonly
                     class="mt-1 block w-full border-gray-200 bg-gray-50 rounded-md shadow-sm" />
            </div>
          </div>

          {{-- Hidden inputs que SI se enviarán al POST (estructura esperada por controller) --}}
          <input type="hidden" name="receptor[tipoDocumento]" id="receptor_tipoDocumento" value="{{ old('receptor.tipoDocumento') }}" />
          <input type="hidden" name="receptor[numDocumento]" id="receptor_numDocumento" value="{{ old('receptor.numDocumento', old('cliente_numero')) }}" />
          <input type="hidden" name="receptor[nrc]" id="receptor_nrc" value="{{ old('receptor.nrc') }}" />
          <input type="hidden" name="receptor[nombre]" id="receptor_nombre" value="{{ old('receptor.nombre') }}" />
          <input type="hidden" name="receptor[codActividad]" id="receptor_codActividad" value="{{ old('receptor.codActividad') }}" />
          <input type="hidden" name="receptor[descActividad]" id="receptor_descActividad" value="{{ old('receptor.descActividad') }}" />
          <input type="hidden" name="receptor[direccion][departamento]" id="receptor_direccion_departamento" value="{{ old('receptor.direccion.departamento') }}" />
          <input type="hidden" name="receptor[direccion][municipio]" id="receptor_direccion_municipio" value="{{ old('receptor.direccion.municipio') }}" />
          <input type="hidden" name="receptor[direccion][complemento]" id="receptor_direccion_complemento" value="{{ old('receptor.direccion.complemento') }}" />
          <input type="hidden" name="receptor[telefono]" id="receptor_telefono" value="{{ old('receptor.telefono') }}" />
          <input type="hidden" name="receptor[correo]" id="receptor_correo" value="{{ old('receptor.correo') }}" />

          {{-- IVA y totales visibles --}}
          <div class="mt-4 grid grid-cols-1 md:grid-cols-4 gap-4 items-end">
            <div>
              <label class="block text-sm font-medium text-gray-700">IVA (%)</label>
              <input type="number" step="0.01" name="iva" id="ivaPct" value="{{ old('iva', 13) }}"
                     class="mt-1 block w-32 border-gray-300 rounded-md shadow-sm focus:ring" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Subtotal (Base)</label>
              <input type="text" id="subtotal_view" readonly class="mt-1 block w-40 border-gray-200 bg-gray-50 rounded-md shadow-sm text-right" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">IVA monto</label>
              <input type="text" id="iva_monto_view" readonly class="mt-1 block w-40 border-gray-200 bg-gray-50 rounded-md shadow-sm text-right" />
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-700">Total</label>
              <input type="text" id="total_view" readonly class="mt-1 block w-40 border-gray-200 bg-gray-50 rounded-md shadow-sm text-right" />
            </div>
          </div>

          <hr class="my-4">

          {{-- Ítems: tabla dinámica --}}
          <div>
            <h3 class="font-semibold mb-2">Ítems</h3>
            <table class="w-full table-auto border-collapse">
              <thead>
                <tr>
                  <th class="border px-2 py-1 text-left">Código</th>
                  <th class="border px-2 py-1 text-left">Descripción</th>
                  <th class="border px-2 py-1 text-right">Cantidad</th>
                  <th class="border px-2 py-1 text-right">Precio (con IVA)</th>
                  <th class="border px-2 py-1 text-right">Descuento</th>
                  <th class="border px-2 py-1">Acción</th>
                </tr>
              </thead>
              <tbody id="items-body">
                {{-- Si hubo old inputs, reconstruimos --}}
                @if(old('items'))
                  @foreach(old('items') as $i => $it)
                    <tr>
                      <td class="border px-2 py-1">
                        <input name="items[{{ $i }}][codigo]" value="{{ $it['codigo'] ?? '' }}" class="w-full" />
                      </td>
                      <td class="border px-2 py-1">
                        <input name="items[{{ $i }}][descripcion]" value="{{ $it['descripcion'] ?? '' }}" class="w-full" />
                      </td>
                      <td class="border px-2 py-1 text-right">
                        <input name="items[{{ $i }}][cantidad]" value="{{ $it['cantidad'] ?? 1 }}" class="w-20 text-right cantidad-input" />
                      </td>
                      <td class="border px-2 py-1 text-right">
                        <input name="items[{{ $i }}][precio]" value="{{ $it['precio'] ?? '0.00' }}" class="w-28 text-right precio-input" />
                      </td>
                      <td class="border px-2 py-1 text-right">
                        <input name="items[{{ $i ?? 0 }}][montoDescu]" value="{{ $it['montoDescu'] ?? '0.00' }}" class="w-28 text-right descuento-input" />
                      </td>
                      <td class="border px-2 py-1 text-center">
                        <button type="button" class="remove-row px-2 py-1 text-red-600">Eliminar</button>
                      </td>
                    </tr>
                  @endforeach
                @else
                  <tr>
                    <td class="border px-2 py-1">
                      <input name="items[0][codigo]" class="w-full" />
                    </td>
                    <td class="border px-2 py-1">
                      <input name="items[0][descripcion]" class="w-full" />
                    </td>
                    <td class="border px-2 py-1 text-right">
                      <input name="items[0][cantidad]" value="1" class="w-20 text-right cantidad-input" />
                    </td>
                    <td class="border px-2 py-1 text-right">
                      <input name="items[0][precio]" value="0.00" class="w-28 text-right precio-input" />
                    </td>
                    <td class="border px-2 py-1 text-right">
                      <input name="items[{{ $i ?? 0 }}][montoDescu]" value="{{ $it['montoDescu'] ?? '0.00' }}" class="w-28 text-right descuento-input" />
                    </td>                    
                    <td class="border px-2 py-1 text-center">
                      <button type="button" class="remove-row px-2 py-1 text-red-600">Eliminar</button>
                    </td>
                  </tr>
                @endif
              </tbody>
            </table>

            <div class="mt-4 grid grid-cols-1 md:grid-cols-3 gap-4 items-end">
  <div>
    <label class="block text-sm font-medium text-gray-700">Descuento global</label>
    <input type="number" step="0.000001" name="descuento_global" id="descuento_global"
           value="{{ old('descuento_global', '0.000000') }}"
           class="mt-1 block w-40 border-gray-300 rounded-md shadow-sm text-right" />
    <p class="text-xs text-gray-500 mt-1">
      El descuento por ítem se aplica antes de impuestos. El descuento global se aplica sobre el subtotal resultante.
    </p>
  </div>
</div>

            <div class="mt-3 flex gap-2">
              <button id="add-item" type="button" class="px-4 py-2 bg-gray-200 rounded">Agregar Ítem</button>
            </div>
          </div>

          <div class="mt-4 grid grid-cols-1 md:grid-cols-3 gap-4 items-end">
            <div>
              <label class="block text-sm font-medium text-gray-700">Descuento global</label>
                <input type="number" step="0.000001" name="descuento_global" id="descuento_global"
                  value="{{ old('descuento_global', '0.000000') }}"
                  class="mt-1 block w-40 border-gray-300 rounded-md shadow-sm text-right" />
                <p class="text-xs text-gray-500 mt-1">
                  El descuento por ítem se aplica antes de impuestos. El descuento global se aplica sobre el subtotal resultante.
                </p>
            </div>
          </div>


          <div class="mt-6 flex justify-end">
            <button type="submit" class="px-6 py-2 bg-blue-600 text-white rounded-xl shadow hover:bg-blue-700">
              Generar DTE (preparar)
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  {{-- Modal para registrar cliente (opcional) --}}
  <div class="fixed z-10 inset-0 overflow-y-auto hidden" id="clienteModal" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
      <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
      <div class="inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:align-middle sm:max-w-lg sm:w-full">
        <div>
          <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">Registrar Cliente</h3>
          <div class="mt-2">
            <form id="clienteForm">
              @csrf
              <div class="grid grid-cols-1 gap-2">
                <input type="text" id="m_nit" name="nit" placeholder="NIT" class="border rounded p-2" />
                <input type="text" id="m_dui" name="dui" placeholder="DUI" class="border rounded p-2" />
                <input type="text" id="m_nombre" name="nombre" placeholder="Nombre *" required class="border rounded p-2" />
                <input type="email" id="m_correo" name="correo" placeholder="Correo" class="border rounded p-2" />
                {{-- CAMBIO: direccion -> complemento --}}
                <textarea id="m_complemento" name="complemento" placeholder="Complemento / Dirección" class="border rounded p-2"></textarea>
                <input type="text" id="m_telefono" name="telefono" placeholder="Teléfono" class="border rounded p-2" />
              </div>
              <div class="mt-3 flex justify-end">
                <button type="button" id="clienteCancel" class="px-3 py-1 bg-gray-200 rounded">Cancelar</button>
                <button type="submit" class="ml-2 px-3 py-1 bg-blue-600 text-white rounded">Guardar</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  @push('scripts')
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // ---------- helpers ----------
      const qs = (s, root=document) => root.querySelector(s);
      const qsa = (s, root=document) => Array.from(root.querySelectorAll(s));

      // ---------- items add/remove/reindex ----------
      const addBtn = qs('#add-item');
      const tbody  = qs('#items-body');

      function reindex() {
        qsa('#items-body tr').forEach((tr, idx) => {
          tr.querySelectorAll('input').forEach((inp) => {
            const name = inp.getAttribute('name') || '';
            const newName = name.replace(/items\[\d+\]/, `items[${idx}]`);
            inp.setAttribute('name', newName);
          });
        });
        // recalc totals whenever index changes
        calcTotals();
      }

      addBtn.addEventListener('click', () => {
        const idx = tbody.querySelectorAll('tr').length;
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td class="border px-2 py-1">
            <input name="items[${idx}][codigo]" class="w-full" />
          </td>
          <td class="border px-2 py-1">
            <input name="items[${idx}][descripcion]" class="w-full" />
          </td>
          <td class="border px-2 py-1 text-right">
            <input name="items[${idx}][cantidad]" value="1" class="w-20 text-right cantidad-input" />
          </td>
          <td class="border px-2 py-1 text-right">
            <input name="items[${idx}][precio]" value="0.00" class="w-28 text-right precio-input" />
          </td>
          <td class="border px-2 py-1 text-right">
            <input name="items[${idx}][montoDescu]" value="0.00" class="w-28 text-right descuento-input" />
          </td>
          <td class="border px-2 py-1 text-center">
            <button type="button" class="remove-row px-2 py-1 text-red-600">Eliminar</button>
          </td>
        `;
        tbody.appendChild(tr);
        reindex();
      });

      tbody.addEventListener('click', (e) => {
        if (e.target.matches('.remove-row')) {
          const tr = e.target.closest('tr');
          tr.remove();
          reindex();
        }
      });

      // recalcular totales cuando cambian cantidad/precio/iva
      function elementValues() {
        const rows = qsa('#items-body tr');
        return rows.map(tr => {
          const qty = parseFloat(tr.querySelector('.cantidad-input')?.value || 0);
          const price = parseFloat(tr.querySelector('.precio-input')?.value || 0);
          return { qty, price };
        });
      }

      function calcTotals() {
  const ivaPct = parseFloat(qs('#ivaPct').value || 0);
  const globDesc = parseFloat(qs('#descuento_global')?.value || 0);

  let subtotalBase = 0;   // base sin IVA y ya con descuentos por ítem
  let ivaMonto = 0;

  qsa('#items-body tr').forEach(tr => {
    const qty = parseFloat(tr.querySelector('.cantidad-input')?.value || 0);
    const priceWithIva = parseFloat(tr.querySelector('.precio-input')?.value || 0);
    const itemDesc = parseFloat(tr.querySelector('.descuento-input')?.value || 0);

    const priceNoIva = ivaPct > 0 ? (priceWithIva / (1 + ivaPct/100)) : priceWithIva;
    const baseLinea = Math.max(0, (priceNoIva * qty) - itemDesc); // 6 decimales internos
    const ivaLinea = (priceWithIva - priceNoIva) * qty;

    subtotalBase += Math.round(baseLinea * 1e6) / 1e6;
    ivaMonto     += Math.round(ivaLinea * 1e6) / 1e6;
  });

  // Aplica descuento global (no negativo)
  const baseConGlobal = Math.max(0, subtotalBase - globDesc);
  const total = baseConGlobal + ivaMonto;

  qs('#subtotal_view').value = baseConGlobal.toFixed(2);
  qs('#iva_monto_view').value = ivaMonto.toFixed(2);
  qs('#total_view').value = total.toFixed(2);
}

      // Delegación para inputs de cantidad/precio (funciona para filas dinámicas)
      tbody.addEventListener('input', (e) => {
        if (e.target.matches('.cantidad-input') || e.target.matches('.precio-input')) {
          calcTotals();
        }
      });
      qs('#ivaPct').addEventListener('input', calcTotals);

      // Inicializar totales al cargar
      calcTotals();

      // ---------- Autocompletar cliente ----------
      const inputDoc = qs('#cliente_numero');
      const statusEl = qs('#cliente-status');

      // visibles
      const vNombre = qs('#cliente_nombre_view');
      const vCorreo = qs('#cliente_correo_view');
      const vDireccion = qs('#cliente_direccion_view'); // mostrará "complemento"
      const vTelefono = qs('#cliente_telefono_view');
      const vDepMun = qs('#cliente_depmun_view');

      // hidden (para enviar)
      const hTipo = qs('#receptor_tipoDocumento');
      const hNum  = qs('#receptor_numDocumento');
      const hNrc  = qs('#receptor_nrc');
      const hNombre = qs('#receptor_nombre');
      const hCodAct = qs('#receptor_codActividad');
      const hDescAct = qs('#receptor_descActividad');
      const hDep = qs('#receptor_direccion_departamento');
      const hMun = qs('#receptor_direccion_municipio');
      const hComp = qs('#receptor_direccion_complemento');
      const hTel = qs('#receptor_telefono');
      const hCorreo = qs('#receptor_correo');

      const buscarBase = "{{ route('clientes.buscar', ['doc' => 'DOC_PLACEHOLDER']) }}";

      async function buscarYCompletar(doc) {
        if (!doc || doc.length < 3) return;
        statusEl.textContent = 'Buscando cliente...';

        try {
          const res = await fetch(buscarBase.replace('DOC_PLACEHOLDER', encodeURIComponent(doc)), {
            headers: { 'Accept': 'application/json' },
            credentials: 'same-origin'
          });

          if (res.status === 200) {
            const json = await res.json();
            if (json.found && json.cliente) {
              const d = json.cliente;

              // visibles
              vNombre.value = d.nombre ?? '';
              vCorreo.value = d.correo ?? '';
              // CAMBIO: mostramos/completamos desde 'complemento' (fallback a 'direccion')
              vDireccion.value = (d.complemento ?? d.direccion ?? '');
              vTelefono.value = d.telefono ?? '';
              vDepMun.value = ((d.departamento ?? '') + ' / ' + (d.municipio ?? '')).trim();

              // hidden - populate exactos para el JSON del DTE
              hNum.value = d.nit ?? d.dui ?? doc;
              hTipo.value = d.nit ? '02' : (d.dui ? '13' : '13');
              hNrc.value = d.nrc ?? '';
              hNombre.value = d.nombre ?? '';
              hCodAct.value = d.cod_actividad ?? '';
              hDescAct.value = d.desc_actividad ?? '';
              hDep.value = d.departamento ?? '';
              hMun.value = d.municipio ?? '';
              hComp.value = (d.complemento ?? d.direccion ?? '');
              hTel.value = d.telefono ?? '';
              hCorreo.value = d.correo ?? '';

              statusEl.textContent = 'Cliente encontrado.';
            } else {
              clearCliente();
              statusEl.textContent = 'Cliente no encontrado. Puede registrarlo o completar los datos.';
              openClienteModalWithNumber(doc);
            }
          } else if (res.status === 404) {
            clearCliente();
            statusEl.textContent = 'Cliente no encontrado. Puede registrarlo o completar los datos.';
            openClienteModalWithNumber(doc);
          } else {
            clearCliente();
            statusEl.textContent = 'Error al buscar cliente.';
          }
        } catch (e) {
          console.error(e);
          statusEl.textContent = 'Error de conexión.';
        }
      }

      function clearCliente() {
        vNombre.value = vCorreo.value = vDireccion.value = vTelefono.value = vDepMun.value = '';
        hTipo.value = hNum.value = hNrc.value = hNombre.value = hCodAct.value = hDescAct.value = '';
        hDep.value = hMun.value = hComp.value = hTel.value = hCorreo.value = '';
      }

      function openClienteModalWithNumber(doc) {
        qs('#m_dui').value = doc;
        qs('#clienteModal').classList.remove('hidden');
      }

      // eventos buscar al salir (blur) o Enter
      inputDoc.addEventListener('blur', () => {
        const val = inputDoc.value.trim();
        if (val.length >= 3) buscarYCompletar(val);
      });
      inputDoc.addEventListener('keydown', (e) => {
        if (e.key === 'Enter') {
          e.preventDefault();
          const val = inputDoc.value.trim();
          if (val.length >= 3) buscarYCompletar(val);
        }
      });

      // ---------- Modal: registrar cliente ----------
      const clienteModal = qs('#clienteModal');
      qs('#clienteCancel').addEventListener('click', () => clienteModal.classList.add('hidden'));

      qs('#clienteForm').addEventListener('submit', async (ev) => {
        ev.preventDefault();
        const form = ev.target;
        const data = new FormData(form);
        data.append('_token', '{{ csrf_token() }}');

        try {
          const res = await fetch("{{ route('clientes.store') }}", {
            method: 'POST',
            body: data,
            credentials: 'same-origin',
            headers: { 'Accept': 'application/json' }
          });
          if (!res.ok) {
            const err = await res.json().catch(()=>({error:'error'}));
            alert(err.error || 'Error creando cliente');
            return;
          }
          const json = await res.json();
          clienteModal.classList.add('hidden');
          inputDoc.value = json.nit ?? json.dui ?? inputDoc.value;
          buscarYCompletar(inputDoc.value);
        } catch (e) {
          console.error(e);
          alert('Error al crear cliente');
        }
      });

    }); // DOMContentLoaded
  </script>
  @endpush

</x-app-layout>
